{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/services/userService.ts"],"sourcesContent":["import { getKindeServerSession } from \"@kinde-oss/kinde-auth-nextjs/server\";\nimport { prisma } from \"../lib/prisma\";\n\nexport async function ensureUserInDb() {\n\tconst { getUser } = getKindeServerSession();\n\tconst kindeUser = await getUser();\n\n\tif (!kindeUser) throw new Error(\"User not authenticated\");\n\n\tlet user = await prisma.user.findUnique({\n\t\twhere: { kindeId: kindeUser.id },\n\t});\n\n\tif (!user) {\n\t\tuser = await prisma.user.create({\n\t\t\tdata: {\n\t\t\t\tkindeId: kindeUser.id,\n\t\t\t\temail: kindeUser.email as string,\n\t\t\t\tname: kindeUser.given_name || \"\",\n\t\t\t},\n\t\t});\n\t}\n\n\treturn user;\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACrB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iPAAA,CAAA,wBAAqB,AAAD;IACxC,MAAM,YAAY,MAAM;IAExB,IAAI,CAAC,WAAW,MAAM,IAAI,MAAM;IAEhC,IAAI,OAAO,MAAM,+GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACvC,OAAO;YAAE,SAAS,UAAU,EAAE;QAAC;IAChC;IAEA,IAAI,CAAC,MAAM;QACV,OAAO,MAAM,+GAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC/B,MAAM;gBACL,SAAS,UAAU,EAAE;gBACrB,OAAO,UAAU,KAAK;gBACtB,MAAM,UAAU,UAAU,IAAI;YAC/B;QACD;IACD;IAEA,OAAO;AACR","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/app/api/user/route.ts"],"sourcesContent":["// app/api/user/route.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { ensureUserInDb } from \"@/services/userService\";\n\nexport async function GET(req: NextRequest) {\n\ttry {\n\t\tconst user = await ensureUserInDb();\n\t\tif (user) {\n\t\t\treturn NextResponse.redirect(new URL(\"/\", req.url));\n\t\t}\n\t} catch (error) {\n\t\treturn NextResponse.json(\n\t\t\t{ error: (error as Error).message },\n\t\t\t{ status: 401 }\n\t\t);\n\t}\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AACxB;AACA;;;AAEO,eAAe,IAAI,GAAgB;IACzC,IAAI;QACH,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,iBAAc,AAAD;QAChC,IAAI,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;QAClD;IACD,EAAE,OAAO,OAAO;QACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACvB;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAClC;YAAE,QAAQ;QAAI;IAEhB;AACD","debugId":null}}]
}