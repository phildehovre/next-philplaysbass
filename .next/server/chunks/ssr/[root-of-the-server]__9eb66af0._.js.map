{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/app/callback/page.tsx"],"sourcesContent":["// pages/callback.tsx or app/callback/page.tsx (Next 13+)\n\"use client\";\n\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nexport default function CallbackPage() {\n\tconst router = useRouter();\n\n\tuseEffect(() => {\n\t\tconst code = router.query.code as string;\n\n\t\tif (!code) return;\n\n\t\tconst fetchToken = async () => {\n\t\t\tconst res = await fetch(\"/api/spotify/token\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({ code }),\n\t\t\t});\n\n\t\t\tconst data = await res.json();\n\t\t\tconsole.log(\"Tokens:\", data);\n\n\t\t\tif (res.ok) {\n\t\t\t\t// Store token in localStorage/context or set cookie\n\t\t\t\trouter.push(\"/\"); // or dashboard\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Token error:\", data.error);\n\t\t\t}\n\t\t};\n\n\t\tfetchToken();\n\t}, [router.query.code]);\n\n\treturn <p>Authorizing with Spotify...</p>;\n}\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;AAGzD;AACA;AAHA;;;;AAKe,SAAS;IACvB,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACT,MAAM,OAAO,OAAO,KAAK,CAAC,IAAI;QAE9B,IAAI,CAAC,MAAM;QAEX,MAAM,aAAa;YAClB,MAAM,MAAM,MAAM,MAAM,sBAAsB;gBAC7C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAK;YAC7B;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,QAAQ,GAAG,CAAC,WAAW;YAEvB,IAAI,IAAI,EAAE,EAAE;gBACX,oDAAoD;gBACpD,OAAO,IAAI,CAAC,MAAM,eAAe;YAClC,OAAO;gBACN,QAAQ,KAAK,CAAC,gBAAgB,KAAK,KAAK;YACzC;QACD;QAEA;IACD,GAAG;QAAC,OAAO,KAAK,CAAC,IAAI;KAAC;IAEtB,qBAAO,8OAAC;kBAAE;;;;;;AACX","debugId":null}}]
}