{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/metronome/Metronome.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/metronome/Metronome.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/metronome/Metronome.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/metronome/Metronome.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/metronome/Metronome.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/metronome/Metronome.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/context/playerContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PlayerContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call PlayerContext() from the server but PlayerContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/playerContext.tsx <module evaluation>\",\n    \"PlayerContext\",\n);\nexport const PlayerProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call PlayerProvider() from the server but PlayerProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/playerContext.tsx <module evaluation>\",\n    \"PlayerProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2DACA","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/context/playerContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PlayerContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call PlayerContext() from the server but PlayerContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/playerContext.tsx\",\n    \"PlayerContext\",\n);\nexport const PlayerProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call PlayerProvider() from the server but PlayerProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/playerContext.tsx\",\n    \"PlayerProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uCACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,uCACA","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/ui/drawer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Drawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call Drawer() from the server but Drawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"Drawer\",\n);\nexport const DrawerClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerClose() from the server but DrawerClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerClose\",\n);\nexport const DrawerContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerContent() from the server but DrawerContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerContent\",\n);\nexport const DrawerDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerDescription() from the server but DrawerDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerDescription\",\n);\nexport const DrawerFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerFooter() from the server but DrawerFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerFooter\",\n);\nexport const DrawerHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerHeader() from the server but DrawerHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerHeader\",\n);\nexport const DrawerOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerOverlay() from the server but DrawerOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerOverlay\",\n);\nexport const DrawerPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerPortal() from the server but DrawerPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerPortal\",\n);\nexport const DrawerTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerTitle() from the server but DrawerTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerTitle\",\n);\nexport const DrawerTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerTrigger() from the server but DrawerTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx <module evaluation>\",\n    \"DrawerTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0DACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0DACA","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/ui/drawer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Drawer = registerClientReference(\n    function() { throw new Error(\"Attempted to call Drawer() from the server but Drawer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"Drawer\",\n);\nexport const DrawerClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerClose() from the server but DrawerClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerClose\",\n);\nexport const DrawerContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerContent() from the server but DrawerContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerContent\",\n);\nexport const DrawerDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerDescription() from the server but DrawerDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerDescription\",\n);\nexport const DrawerFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerFooter() from the server but DrawerFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerFooter\",\n);\nexport const DrawerHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerHeader() from the server but DrawerHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerHeader\",\n);\nexport const DrawerOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerOverlay() from the server but DrawerOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerOverlay\",\n);\nexport const DrawerPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerPortal() from the server but DrawerPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerPortal\",\n);\nexport const DrawerTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerTitle() from the server but DrawerTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerTitle\",\n);\nexport const DrawerTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DrawerTrigger() from the server but DrawerTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/drawer.tsx\",\n    \"DrawerTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,sCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,sCACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,sCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,sCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,sCACA","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACzC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACrB","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/metronome/SpotifyPlayer.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport {\n\tDrawer,\n\tDrawerClose,\n\tDrawerContent,\n\tDrawerDescription,\n\tDrawerFooter,\n\tDrawerHeader,\n\tDrawerTitle,\n\tDrawerTrigger,\n} from \"@/components/ui/drawer\";\nimport { Button } from \"../ui/button\";\nimport { PlayerContext } from \"@/context/playerContext\";\n\nconst SpotifyPlayer = () => {\n\tconst { currentTrack } = useContext(PlayerContext);\n\treturn (\n\t\t<Drawer open={currentTrack}>\n\t\t\t<DrawerContent>\n\t\t\t\t<DrawerHeader>\n\t\t\t\t\t<DrawerTitle>Are you absolutely sure?</DrawerTitle>\n\t\t\t\t\t<DrawerDescription>This action cannot be undone.</DrawerDescription>\n\t\t\t\t</DrawerHeader>\n\t\t\t\t<DrawerFooter>\n\t\t\t\t\t<Button>Submit</Button>\n\t\t\t\t\t<DrawerClose>\n\t\t\t\t\t\t<Button variant=\"outline\">Cancel</Button>\n\t\t\t\t\t</DrawerClose>\n\t\t\t\t</DrawerFooter>\n\t\t\t</DrawerContent>\n\t\t</Drawer>\n\t);\n};\n\nexport default SpotifyPlayer;\n"],"names":[],"mappings":";;;;AAAA;AACA;AAUA;AACA;;;;;;AAEA,MAAM,gBAAgB;IACrB,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,gBAAa;IACjD,qBACC,8OAAC,2HAAA,CAAA,SAAM;QAAC,MAAM;kBACb,cAAA,8OAAC,2HAAA,CAAA,gBAAa;;8BACb,8OAAC,2HAAA,CAAA,eAAY;;sCACZ,8OAAC,2HAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,8OAAC,2HAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAEpB,8OAAC,2HAAA,CAAA,eAAY;;sCACZ,8OAAC,2HAAA,CAAA,SAAM;sCAAC;;;;;;sCACR,8OAAC,2HAAA,CAAA,cAAW;sCACX,cAAA,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMhC;uCAEe","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/app/metronome/page.tsx"],"sourcesContent":["import Metronome from \"@/components/metronome/Metronome\";\nimport React from \"react\";\nimport { getKindeServerSession } from \"@kinde-oss/kinde-auth-nextjs/server\";\nimport { redirect } from \"next/navigation\";\nimport { PlayerProvider } from \"@/context/playerContext\";\nimport SpotifyPlayer from \"@/components/metronome/SpotifyPlayer\";\n\nconst page = async () => {\n\tconst { isAuthenticated } = await getKindeServerSession();\n\tconst isLoggedIn = await isAuthenticated();\n\n\tif (!isLoggedIn) {\n\t\tredirect(\"/login\");\n\t}\n\n\treturn (\n\t\t<PlayerProvider>\n\t\t\t<Metronome />\n\t\t\t<SpotifyPlayer />\n\t\t</PlayerProvider>\n\t);\n};\n\nexport default page;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;AAEA,MAAM,OAAO;IACZ,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM,CAAA,GAAA,+OAAA,CAAA,wBAAqB,AAAD;IACtD,MAAM,aAAa,MAAM;IAEzB,IAAI,CAAC,YAAY;QAChB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACV;IAEA,qBACC,8OAAC,yHAAA,CAAA,iBAAc;;0BACd,8OAAC,qIAAA,CAAA,UAAS;;;;;0BACV,8OAAC,yIAAA,CAAA,UAAa;;;;;;;;;;;AAGjB;uCAEe","debugId":null}}]
}