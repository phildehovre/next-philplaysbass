{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/payment/StripePayment.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n\tuseStripe,\n\tuseElements,\n\tPaymentElement,\n} from \"@stripe/react-stripe-js\";\n\nconst StripePayment = ({ handleSubmitRegistration }) => {\n\tconst stripe = useStripe();\n\tconst elements = useElements();\n\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (elements == null) {\n\t\t\treturn;\n\t\t}\n\t\thandleSubmitRegistration();\n\n\t\t// Trigger form validation and wallet collection\n\t\tconst { error: submitError } = await elements.submit();\n\t\tif (submitError) {\n\t\t\t// Show error to your customer\n\t\t\tsetErrorMessage(submitError.message);\n\t\t\treturn;\n\t\t}\n\n\t\t// Create the PaymentIntent and obtain clientSecret from your server endpoint\n\t\tconst res = await fetch(\n\t\t\t`${import.meta.env.VITE_API_URL}/checkout/create-payment-intent`,\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t}\n\t\t);\n\t\tconst { client_secret: clientSecret } = await res.json();\n\n\t\tconst { error } = await stripe.confirmPayment({\n\t\t\t//`Elements` instance that was used to create the Payment Element\n\t\t\telements,\n\t\t\tclientSecret,\n\t\t\tconfirmParams: {\n\t\t\t\treturn_url: `${import.meta.env.VITE_CLIENT_URL}/checkout/success`,\n\t\t\t},\n\t\t});\n\n\t\tif (error) {\n\t\t\t// This point will only be reached if there is an immediate error when\n\t\t\t// confirming the payment. Show error to your customer (for example, payment\n\t\t\t// details incomplete)\n\t\t\tsetErrorMessage(error.message);\n\t\t} else {\n\t\t\t// Your customer will be redirected to your `return_url`. For some payment\n\t\t\t// methods like iDEAL, your customer will be redirected to an intermediate\n\t\t\t// site first to authorize the payment, then redirected to the `return_url`.\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<PaymentElement />\n\t\t\t<button type=\"submit\" disabled={!stripe || !elements}>\n\t\t\t\tPay\n\t\t\t</button>\n\t\t\t{/* Show error message to your customers */}\n\t\t\t{errorMessage && <div>{errorMessage}</div>}\n\t\t</form>\n\t);\n};\n\nexport default StripePayment;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;;;AAMA,MAAM,gBAAgB,CAAC,EAAE,wBAAwB,EAAE;;IAClD,MAAM,SAAS,CAAA,GAAA,sLAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,sLAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe,OAAO;QAC3B,MAAM,cAAc;QAEpB,IAAI,YAAY,MAAM;YACrB;QACD;QACA;QAEA,gDAAgD;QAChD,MAAM,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,SAAS,MAAM;QACpD,IAAI,aAAa;YAChB,8BAA8B;YAC9B,gBAAgB,YAAY,OAAO;YACnC;QACD;QAEA,6EAA6E;QAC7E,MAAM,MAAM,MAAM,MACjB,GAAG,8BAAY,GAAG,CAAC,YAAY,CAAC,+BAA+B,CAAC,EAChE;YACC,QAAQ;QACT;QAED,MAAM,EAAE,eAAe,YAAY,EAAE,GAAG,MAAM,IAAI,IAAI;QAEtD,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,cAAc,CAAC;YAC7C,iEAAiE;YACjE;YACA;YACA,eAAe;gBACd,YAAY,GAAG,8BAAY,GAAG,CAAC,eAAe,CAAC,iBAAiB,CAAC;YAClE;QACD;QAEA,IAAI,OAAO;YACV,sEAAsE;YACtE,4EAA4E;YAC5E,sBAAsB;YACtB,gBAAgB,MAAM,OAAO;QAC9B,OAAO;QACN,0EAA0E;QAC1E,0EAA0E;QAC1E,4EAA4E;QAC7E;IACD;IAEA,qBACC,6LAAC;QAAK,UAAU;;0BACf,6LAAC,sLAAA,CAAA,iBAAc;;;;;0BACf,6LAAC;gBAAO,MAAK;gBAAS,UAAU,CAAC,UAAU,CAAC;0BAAU;;;;;;YAIrD,8BAAgB,6LAAC;0BAAK;;;;;;;;;;;;AAG1B;GA9DM;;QACU,sLAAA,CAAA,YAAS;QACP,sLAAA,CAAA,cAAW;;;KAFvB;uCAgES","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/phil/Dev/philplaysbass/components/payment/PaymentForm.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./Form.css\";\nimport StripePayment from \"./StripePayment\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nconst stripePromise = loadStripe(process.env.VITE_STRIPE_PK as string);\n\ntype PaymentFormProps = {\n\tonSubmit: () => void;\n\tpaymentDetails: FormData;\n};\n\ntype FormData = {\n\tiban: string;\n\taccount_holder: string;\n};\n\nconst PaymentForm: React.FC<PaymentFormProps> = ({\n\tonSubmit,\n\tpaymentDetails,\n}) => {\n\tconst [clientSecret, setClientSecret] = useState();\n\tconst {\n\t\thandleSubmit,\n\t\tregister,\n\t\tsetValue,\n\t\tformState: { errors },\n\t} = useForm<FormData>({ defaultValues: paymentDetails });\n\n\tconst options = {\n\t\tclientSecret,\n\t};\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch(\n\t\t\t\t\t`${process.env.VITE_API_URL}/checkout/create-payment-intent`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t// body: JSON.stringify({amount: parseFloat(paymentPeriod.price) * 100, currency: \"usd\"}),\n\t\t\t\t\t\tbody: JSON.stringify({ amount: 50, currency: \"usd\" }),\n\t\t\t\t\t\tcredentials: \"include\",\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst secret = await res.json();\n\t\t\t\tsetClientSecret(secret.clientSecret);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"Payment intent error:\", err);\n\t\t\t\tthrow new Error(\"Failed to create payment intent\");\n\t\t\t}\n\t\t})();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (paymentDetails) {\n\t\t\tsetValue(\"account_holder\", paymentDetails.account_holder);\n\t\t\tsetValue(\"iban\", paymentDetails.iban);\n\t\t}\n\t}, [setValue, paymentDetails]);\n\n\treturn (\n\t\t<div className=\"\">\n\t\t\t<form className=\"form_ctn\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<h2>IBAN</h2>\n\t\t\t\t<div className=\"input-row\">\n\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t<label htmlFor=\"account_holder\">\n\t\t\t\t\t\t\tAccount holder\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t{...register(\"account_holder\", {\n\t\t\t\t\t\t\t\t\trequired: \"Account holder name is required\",\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tclassName={errors.account_holder ? \"error\" : \"\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{errors.account_holder && (\n\t\t\t\t\t\t\t<p className=\"error\">{errors.account_holder.message}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t<label htmlFor=\"iban\">\n\t\t\t\t\t\t\tAccount IBAN\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t{...register(\"iban\", { required: \"IBAN is required\" })}\n\t\t\t\t\t\t\t\tclassName={errors.iban ? \"error\" : \"\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{errors.iban && <p className=\"error\">{errors.iban.message}</p>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<h2>Your first payment</h2>\n\t\t\t</form>\n\t\t\t{clientSecret && (\n\t\t\t\t<Elements stripe={stripePromise} options={options}>\n\t\t\t\t\t<StripePayment handleSubmitRegistration={onSubmit} />\n\t\t\t\t</Elements>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default PaymentForm;\n"],"names":[],"mappings":";;;AAQiC;;AAPjC;AACA;;;;;;AAEA;AACA;AAAA;AACA;;;AANA;;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,cAAc;AAY3D,MAAM,cAA0C,CAAC,EAChD,QAAQ,EACR,cAAc,EACd;;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;IAC/C,MAAM,EACL,YAAY,EACZ,QAAQ,EACR,QAAQ,EACR,WAAW,EAAE,MAAM,EAAE,EACrB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAY;QAAE,eAAe;IAAe;IAEtD,MAAM,UAAU;QACf;IACD;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACT;yCAAC;oBACA,IAAI;wBACH,MAAM,MAAM,MAAM,MACjB,GAAG,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,YAAY,CAAC,+BAA+B,CAAC,EAC5D;4BACC,QAAQ;4BACR,0FAA0F;4BAC1F,MAAM,KAAK,SAAS,CAAC;gCAAE,QAAQ;gCAAI,UAAU;4BAAM;4BACnD,aAAa;4BACb,SAAS;gCACR,gBAAgB;4BACjB;wBACD;wBAED,MAAM,SAAS,MAAM,IAAI,IAAI;wBAC7B,gBAAgB,OAAO,YAAY;oBACpC,EAAE,OAAO,KAAK;wBACb,QAAQ,KAAK,CAAC,yBAAyB;wBACvC,MAAM,IAAI,MAAM;oBACjB;gBACD;aAAC;QACF;gCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACT,IAAI,gBAAgB;gBACnB,SAAS,kBAAkB,eAAe,cAAc;gBACxD,SAAS,QAAQ,eAAe,IAAI;YACrC;QACD;gCAAG;QAAC;QAAU;KAAe;IAE7B,qBACC,6LAAC;QAAI,WAAU;;0BACd,6LAAC;gBAAK,WAAU;gBAAW,UAAU,aAAa;;kCACjD,6LAAC;kCAAG;;;;;;kCACJ,6LAAC;wBAAI,WAAU;;0CACd,6LAAC;gCAAI,WAAU;;kDACd,6LAAC;wCAAM,SAAQ;;4CAAiB;0DAE/B,6LAAC;gDACA,MAAK;gDACJ,GAAG,SAAS,kBAAkB;oDAC9B,UAAU;gDACX,EAAE;gDACF,WAAW,OAAO,cAAc,GAAG,UAAU;;;;;;;;;;;;oCAG9C,OAAO,cAAc,kBACrB,6LAAC;wCAAE,WAAU;kDAAS,OAAO,cAAc,CAAC,OAAO;;;;;;;;;;;;0CAGrD,6LAAC;gCAAI,WAAU;;kDACd,6LAAC;wCAAM,SAAQ;;4CAAO;0DAErB,6LAAC;gDACA,MAAK;gDACJ,GAAG,SAAS,QAAQ;oDAAE,UAAU;gDAAmB,EAAE;gDACtD,WAAW,OAAO,IAAI,GAAG,UAAU;;;;;;;;;;;;oCAGpC,OAAO,IAAI,kBAAI,6LAAC;wCAAE,WAAU;kDAAS,OAAO,IAAI,CAAC,OAAO;;;;;;;;;;;;;;;;;;kCAG3D,6LAAC;kCAAG;;;;;;;;;;;;YAEJ,8BACA,6LAAC,sLAAA,CAAA,WAAQ;gBAAC,QAAQ;gBAAe,SAAS;0BACzC,cAAA,6LAAC,0IAAA,CAAA,UAAa;oBAAC,0BAA0B;;;;;;;;;;;;;;;;;AAK9C;GAxFM;;QAUD,iKAAA,CAAA,UAAO;;;KAVN;uCA0FS","debugId":null}}]
}