// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String
  playlists Playlist[] // 1-to-many (User -> Playlist)
  kindeId   String   @unique
}

model Playlist {
  id        Int           @id @default(autoincrement())
  name      String
  createdAt DateTime      @default(now())
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  songs     PlaylistSong[] // Many-to-many via join table
}

model Song {
  id        Int           @id @default(autoincrement())
  title     String
  externalId String  @unique // song_id from external source
  uri String
  tempo Int
  artist    String
  duration  Int?           // duration in seconds
  playlists PlaylistSong[] // Many-to-many via join table
}

// JOIN TABLE for many-to-many relation between Playlist and Song
model PlaylistSong {
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId Int

  song       Song     @relation(fields: [songId], references: [id])
  songId     Int

  addedAt    DateTime @default(now())

  @@id([playlistId, songId]) // Composite primary key
}
